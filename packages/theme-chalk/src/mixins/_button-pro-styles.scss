/** @format */

@use '../mixins/var' as *;
@use './mixins' as *;
@use '../mixins/function' as *;
@use '../common/var' as *;
@use 'sass:map';

// 1. 3D按钮 - 具有立体感的按钮
@mixin button-pro-3d($type) {
  // 使用 css-var-from-global 获取实际颜色值而不是 CSS 变量字符串
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');

  box-shadow: 0 6px 0 $dark-color,
    0 6px 10px rgba(var(--el-color-#{$type}-rgb), 0.3);
  transform: translateY(0);
  transition: all 0.2s ease;

  &:active {
    color: $text-color;
    transform: translateY(4px);
    box-shadow: 0 2px 0 $dark-color,
      0 2px 5px rgba(var(--el-color-#{$type}-rgb), 0.2);
  }
}

// 2. 霓虹灯按钮 - 发光边框效果
@mixin button-pro-neon($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  box-shadow: 0 0 5px rgba(var(--el-color-#{$type}-rgb), 0.7),
    0 0 10px rgba(var(--el-color-#{$type}-rgb), 0.5),
    0 0 15px rgba(var(--el-color-#{$type}-rgb), 0.3);
  text-shadow: 0 0 5px rgba(var(--el-color-#{$type}-rgb), 0.5);
  transition: all 0.3s ease;

  &:hover {
    color: $text-color;
    box-shadow: 0 0 10px rgba(var(--el-color-#{$type}-rgb), 0.8),
      0 0 20px rgba(var(--el-color-#{$type}-rgb), 0.6),
      0 0 30px rgba(var(--el-color-#{$type}-rgb), 0.4);
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.9);
  }
}

// 3. 渐变按钮 - 多彩渐变背景
@mixin button-pro-gradient($type, $direction: to right) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $light-color: getCssVar('color', $type, 'light-3');
  $dark-color: getCssVar('color', $type, 'dark-2');

  color: $text-color;
  background-image: linear-gradient($direction, $color, $light-color);
  border: none;
  transition: all 0.5s ease;
  background-size: 200% auto;
  box-shadow: 0 4px 6px rgba(var(--el-color-#{$type}-rgb), 0.2);

  &:hover {
    color: $text-color;
    background-position: right center;
    box-shadow: 0 6px 10px rgba(var(--el-color-#{$type}-rgb), 0.4);
  }
}

// 4. 涟漪按钮 - 点击产生波纹效果
@mixin button-pro-ripple($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  position: relative;
  overflow: hidden;
  transform: translate3d(0, 0, 0);
  border-color: $color;
  background-color: transparent;
  color: $color;
  transition: color 0.3s ease, background-color 0.3s ease,
    border-color 0.3s ease, box-shadow 0.3s ease;

  &:hover {
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.8);
    border-color: $dark-color;
    box-shadow: 0 0 10px rgba(var(--el-color-#{$type}-rgb), 0.5);
  }

  &::after {
    content: '';
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
    background-image: radial-gradient(
      circle,
      $light-color 10%,
      transparent 10.01%
    );
    background-repeat: no-repeat;
    background-position: 50%;
    transform: scale(10, 10);
    opacity: 0;
    transition: transform 0.3s, opacity 0.5s;
  }

  &:active::after {
    transform: scale(0, 0);
    opacity: 0.8;
    transition: 0s;
  }

  // 添加一个持续的微小波纹动画
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 120%;
    height: 120%;
    border-radius: 50%;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.05);
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
    z-index: -1;
  }

  &:hover::before {
    animation: button-pro-ripple-pulse 1.5s ease-out infinite;
  }

  @keyframes button-pro-ripple-pulse {
    0% {
      transform: translate(-50%, -50%) scale(0);
      opacity: 0.5;
    }
    100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0;
    }
  }
}

// 5. 边框动画按钮 - 边框动画效果
@mixin button-pro-border-animation($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  position: relative;
  border: none;
  color: $color;
  background-color: transparent;
  transition: color 0.3s ease, background-color 0.3s ease,
    border-color 0.3s ease;

  &::before,
  &::after {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    border: 2px solid transparent;
    box-sizing: border-box;
  }

  &::before {
    top: 0;
    left: 0;
  }

  &::after {
    bottom: 0;
    right: 0;
  }

  &:hover {
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.8);
    border-color: $dark-color;
  }

  &:hover::before,
  &:hover::after {
    width: 100%;
    height: 100%;
  }

  &:hover::before {
    border-top-color: $light-color;
    border-right-color: $light-color;
    transition: width 0.3s ease-out, height 0.3s ease-out 0.3s;
  }

  &:hover::after {
    border-bottom-color: $light-color;
    border-left-color: $light-color;
    transition: width 0.3s ease-out, height 0.3s ease-out 0.3s;
  }
}

// 6. 脉冲按钮 - 呼吸灯效果
@mixin button-pro-pulse($type) {
  $color: getCssVar('color', $type);
  animation: pulse-#{$type} 1.5s infinite;

  @keyframes pulse-#{$type} {
    0% {
      box-shadow: 0 0 0 0 var(--el-color-#{$type}, rgba(0, 0, 0, 0.7));
    }
    50% {
      box-shadow: 0 0 0 5px var(--el-color-#{$type}, rgba(0, 0, 0, 0));
    }
    100% {
      box-shadow: 0 0 0 0 var(--el-color-#{$type}, rgba(0, 0, 0, 0));
    }
  }
}

// 7. 悬浮按钮 - 鼠标悬浮时上浮效果
@mixin button-pro-float($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  border-color: $color;
  background-color: transparent;
  color: $color;
  transition: transform 0.3s ease, box-shadow 0.3s ease, color 0.3s ease,
    background-color 0.3s ease, border-color 0.3s ease;

  &:hover {
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.8);
    // border-color: $dark-color;
    transform: translateY(-5px);
    // box-shadow: 0 10px 20px rgba(var(--el-color-#{$type}-rgb), 0.3);
  }
}

// 8. 光泽按钮 - 鼠标悬浮时产生闪光效果
@mixin button-pro-shine($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  position: relative;
  overflow: hidden;
  border-color: $color;
  background-color: transparent;
  color: $color;
  transition: color 0.3s ease, background-color 0.3s ease,
    border-color 0.3s ease;

  &:hover {
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.8);
    border-color: $dark-color;
  }

  &::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      to right,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.8) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    transform: rotate(30deg);
    transition: transform 0.5s;
    opacity: 0;
    z-index: 1;
  }

  &:hover::before {
    opacity: 1;
    transform: rotate(30deg) translate(80%, -80%);
  }
}

// 9. 轮廓按钮 - 鼠标悬浮时填充背景
@mixin button-pro-outline($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  color: $color;
  background-color: transparent;
  border: 2px solid $color;
  transition: all 0.3s ease;

  &:hover {
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.9);
    // border-color: $dark-color;
    // box-shadow: 0 0 8px rgba(var(--el-color-#{$type}-rgb), 0.5);
  }
}

// 10. 扩展按钮 - 鼠标悬浮时宽度扩展
@mixin button-pro-expand($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  border-color: $color;
  background-color: transparent;
  color: $color;
  transition: all 0.3s ease;

  &:hover {
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.8);
    border-color: $dark-color;
    padding-left: calc(
      map.get($button-pro-padding-horizontal, 'default') * 1.5
    );
    padding-right: calc(
      map.get($button-pro-padding-horizontal, 'default') * 1.5
    );
  }
}

// 11. 摇晃按钮 - 鼠标悬浮时左右摇晃
@mixin button-pro-shake($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  border-color: $color;
  background-color: transparent;
  color: $color;
  transition: color 0.3s ease, background-color 0.3s ease,
    border-color 0.3s ease;

  &:hover {
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.8);
    border-color: $dark-color;
    animation: button-pro-shake 0.5s ease;
  }

  @keyframes button-pro-shake {
    0%,
    100% {
      transform: translateX(0);
    }
    10%,
    30%,
    50%,
    70%,
    90% {
      transform: translateX(-5px);
    }
    20%,
    40%,
    60%,
    80% {
      transform: translateX(5px);
    }
  }
}

// 12. 旋转按钮 - 鼠标悬浮时图标旋转
@mixin button-pro-rotate-icon($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  border-color: $color;
  background-color: transparent;
  color: $color;
  transition: color 0.3s ease, background-color 0.3s ease,
    border-color 0.3s ease;

  [class*='#{$namespace}-icon'] {
    transition: transform 0.3s ease;
  }

  &:hover {
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.8);
    border-color: $dark-color;

    [class*='#{$namespace}-icon'] {
      transform: rotate(180deg);
    }
  }
}

// 13. 弹跳按钮 - 鼠标悬浮时弹跳效果
@mixin button-pro-bounce($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  border-color: $color;
  background-color: transparent;
  color: $color;
  transition: color 0.3s ease, background-color 0.3s ease,
    border-color 0.3s ease;

  &:hover {
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.8);
    border-color: $dark-color;
    animation: button-pro-bounce 0.5s;
  }

  @keyframes button-pro-bounce {
    0%,
    20%,
    50%,
    80%,
    100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-10px);
    }
    60% {
      transform: translateY(-5px);
    }
  }
}

// 14. 折叠按钮 - 鼠标悬浮时高度变化
@mixin button-pro-fold($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  border-color: $color;
  background-color: transparent;
  color: $color;
  transition: all 0.3s ease;
  transform-origin: center bottom;

  &:hover {
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.8);
    border-color: $dark-color;
    transform: perspective(500px) rotateX(20deg);
    box-shadow: 0 15px 25px rgba(var(--el-color-#{$type}-rgb), 0.5);
  }
}

// 15. 滑动按钮 - 背景滑动效果
@mixin button-pro-slide($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  position: relative;
  z-index: 1;
  overflow: hidden;
  border-color: $color;
  color: $color;
  background-color: transparent;
  transition: color 0.3s ease, border-color 0.3s ease;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.9);
    transition: all 0.3s ease;
    z-index: -1;
  }

  &:hover {
    color: $text-color;
    border-color: $dark-color;
  }

  &:hover::before {
    left: 0;
  }
}

// 16. 气泡按钮 - 鼠标悬浮时产生气泡效果
@mixin button-pro-bubble($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  position: relative;
  overflow: hidden;
  border-color: $color;
  color: $color;
  background-color: transparent;
  transition: color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;
  z-index: 1;

  // 主气泡效果
  &::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 50%;
    width: 0;
    height: 0;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.9);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.5s cubic-bezier(0.25, 0.8, 0.25, 1),
      height 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);
    z-index: -1;
  }

  // 多个小气泡效果
  &::after {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    background-image: radial-gradient(
        circle at 20% 35%,
        rgba(255, 255, 255, 0.3) 3px,
        transparent 4px
      ),
      radial-gradient(
        circle at 75% 44%,
        rgba(255, 255, 255, 0.3) 4px,
        transparent 5px
      ),
      radial-gradient(
        circle at 46% 52%,
        rgba(255, 255, 255, 0.3) 5px,
        transparent 6px
      ),
      radial-gradient(
        circle at 33% 76%,
        rgba(255, 255, 255, 0.3) 3px,
        transparent 4px
      ),
      radial-gradient(
        circle at 80% 70%,
        rgba(255, 255, 255, 0.3) 4px,
        transparent 5px
      );
    opacity: 0;
    transform: scale(0.8);
    transition: opacity 0.5s ease, transform 0.5s ease;
    z-index: -1;
  }

  &:hover {
    color: $text-color;
    border-color: $dark-color;
    box-shadow: 0 0 15px rgba(var(--el-color-#{$type}-rgb), 0.6);

    &::before {
      width: 250%;
      height: 250%;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }

    &::after {
      opacity: 1;
      transform: scale(1);
      animation: button-pro-bubble-float 2s ease-in-out infinite;
    }
  }

  @keyframes button-pro-bubble-float {
    0%,
    100% {
      transform: translateY(0) scale(1);
    }
    50% {
      transform: translateY(-5px) scale(1.05);
    }
  }
}

// 17. 闪烁按钮 - 鼠标悬浮时闪烁效果
@mixin button-pro-blink($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  border-color: $color;
  background-color: transparent;
  color: $color;
  transition: color 0.3s ease, background-color 0.3s ease,
    border-color 0.3s ease;

  &:hover {
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.8);
    border-color: $dark-color;
    animation: button-pro-blink 0.7s infinite;
    box-shadow: 0 0 10px rgba(var(--el-color-#{$type}-rgb), 0.6);
  }

  @keyframes button-pro-blink {
    0%,
    100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.6;
      transform: scale(1.05);
    }
  }
}

// 18. 翻转按钮 - 3D翻转效果
@mixin button-pro-flip($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  border-color: $color;
  background-color: transparent;
  color: $color;
  transition: all 0.5s ease;
  transform-style: preserve-3d;
  perspective: 500px;

  &:hover {
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.8);
    border-color: $dark-color;
    transform: rotateY(180deg);
  }
}

// 19. 阴影按钮 - 动态阴影效果
@mixin button-pro-shadow($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');

  border-color: $color;
  background-color: transparent;
  color: $color;
  box-shadow: 0 4px 6px rgba(var(--el-color-#{$type}-rgb), 0.2);
  transition: all 0.3s ease;

  &:hover {
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.8);
    border-color: $dark-color;
    box-shadow: 0 8px 15px rgba(var(--el-color-#{$type}-rgb), 0.4);
  }
}

// 20. 缩放按钮 - 鼠标悬浮时缩放效果
@mixin button-pro-scale($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');
  transition: all 0.3s ease;

  border-color: $color;
  background-color: transparent;
  color: $color;
  &:hover {
    transform: scale(1.05);
    color: $text-color;
    background-color: rgba(var(--el-color-#{$type}-rgb), 0.8);
    border-color: $dark-color;
  }

  &:active {
    transform: scale(0.95);
  }
}

// 21. hover空背景到主题色过渡
@mixin button-pro-hover-bg-write($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $bg-color: getCssVar('color', $type, 'light-i');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');
  transition: all 0.3s ease;

  border-color: $color;
  background-color: var(--el-color-#{$type}-rgb);
  color: getCssVar('color', $type, 'light-i');
  &:hover {
    color: $text-color;
    background-color: getCssVar('color', $type);
    border-color: getCssVar('color', $text-color);
  }
}
// 22. hover主题色到空背景过渡
@mixin button-pro-hover-bg-color($type) {
  $color: getCssVar('color', $type);
  $text-color: getCssVar('color', 'white');
  $bg-color: getCssVar('color', $type, 'light-i');
  $dark-color: getCssVar('color', $type, 'dark-2');
  $light-color: getCssVar('color', $type, 'light-3');
  transition: all 0.3s ease;
  // var(--el-color-#{$type}-rgb);
  border-color: $color;
  background-color: getCssVar(
    'color',
    $type
  ); // getCssVar('color', $type, 'light-i');
  color: $text-color;
  &:hover {
    color: getCssVar('color', $type);
    background-color: var(--el-color-#{$type}-rgb);
    border-color: getCssVar('color', $text-color);
  }
}
